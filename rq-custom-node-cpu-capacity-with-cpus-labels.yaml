apiVersion: metering.openshift.io/v1
kind: ReportQuery
metadata:
  name: custom-role-node-cpu-capacity-labels
  namespace: openshift-metering
spec:
  columns:
  - name: period_start
    type: timestamp
    unit: date
  - name: period_end
    type: timestamp
    unit: date
  - name: node
    type: varchar
    unit: kubernetes_node
  - name: node_capacity_cpu_cores
    type: double
    unit: cpu_cores
  - name: role
    type: varchar
  - name: node_lob
    type: varchar
  - name: resource_id
    type: varchar
  - name: node_capacity_cpu_core_seconds
    type: double
    unit: cpu_core_seconds
  inputs:
  - name: ReportingStart
    type: time
  - name: ReportingEnd
    type: time
  - default: custom-role-node-cpu-capacity-raw
    name: CustomRoleNodeCpuCapacityRawDataSourceName
    type: ReportDataSource
  query: |
    SELECT
      timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart| prestoTimestamp |}' AS period_start,
      timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}' AS period_end,
      node,
      node_capacity_cpu_cores,
      array_join(map_values(transform_values(map_filter(map_union(labels), (k, v) -> k LIKE '%role%'), (k, v) -> v)), '|') AS role,
      array_join(map_values(transform_values(map_filter(map_union(labels), (k, v) -> k LIKE '%label_node_lob%'), (k, v) -> v)), '|') AS node_lob,
      resource_id,
      sum(node_capacity_cpu_core_seconds) as node_capacity_cpu_core_seconds
    FROM {| dataSourceTableName .Report.Inputs.CustomRoleNodeCpuCapacityRawDataSourceName |}
    WHERE "timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
    AND "timestamp" < timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
    AND dt >= '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prometheusMetricPartitionFormat |}'
    AND dt <= '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prometheusMetricPartitionFormat |}'
    GROUP BY node, resource_id, node_capacity_cpu_cores
